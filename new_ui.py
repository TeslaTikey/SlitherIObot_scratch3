import scratchattach as scratch3
import time as t
import keyboard as kb
from getkey import getkey


session = scratch3.Session(".eJxVkMtOwzAQRf8lawhx_EjcXRESEosKoUrAKhrbk8QksaPYVQuIf8eWuun2npkz1_4tTgE3BwsWuyLoDaIeZxz8OkPs_ZbiuyL6CV3C0khUFFVbEWDcgGqgNrqpeGuUEEbs8Kn_qPVzOL7D62W4NN8vB9SUdcuxTZrZD9bd2zWZiCBlS0rBSkIz6uAUxy436axJnNaiIYzThMwXuMF30S74411uuV9wsxoeDnjuPv023e6PEMZ8QddScEJ0KiuhYpLJRvTQmxYpMsbrCmnFVZ2fhyFq7yeb5eckRHOrVKDTB-ReOUMX0_VovSuvIJRvuM7X8PE6_PcPIodw5w:1rXfzW:_Bc_n_itSLQcs5Qt8-Ei3clkDoo", username="scratchlegoplatforme") 

conn = session.connect_cloud('108566337')

def transmitData(targeted, value):
  for n in range(1, len(targeted) + 1):
    playerID = str('Player_' + targeted[n-1])
    print('Sending', playerID)
    conn.set_var('Player_9', str(value))
    print(value)
    t.sleep(0.2)
  t.sleep(1 - 0.2 * len(targeted))

def otTransmission():
  for i in data:
    currentData = i
    transmitData(transmission_vars, currentData)

def continousTransmission():
  i = 0
  while True:
    currentData = data[i]
    transmitData(transmission_vars, currentData)
    i += 1
    if i > len(data) - 1:
      i = 0
    #if getkey.getkey() == 'a':
      #break

while True:
  #data = list(input('Please enter recorded data: '))
  data = [15122105236513453364136345346307267416864127732686999991317923423262636263626362636263626362636263111010,16122105236513453364136345346307267415804126631056999983317923423262636263626362636263626362636263111010,17122105236513453364136345346307267416814122830476999987317923423262636263626362636263626362636263111010,18122105236513453364136345346307267416084130431626999979317923423262636263626362636263626362636263111010,191221052365134533641363453463072654165641204146999980317923423262636263626362636263626362636263111010,10122105236513453364136345346307267416334131632016999974317923423262636263626362636263626362636263111010,1112210523651345336413634534630726641638412012006999976317923423262636263626362636263626362636263111010,12122105236513453364136345346307267416574131532056999972317923423262636263626362636263626362636263111010,1312210523651345336413634534630726641612412062316999965317923423262636263626362636263626362636263111010,14122105236513453364136345346307267416794130332456999962317923423262636263626362636263626362636263111010,1512210523651345336413634534630726641593412212706999959317923423262636263626362636263626362636263111010,16122105236513453364136345346307267416934128730546999957317923423262636263626362636263626362636263111010,1712210523651345336413634534630726641583412372876999958317923423262636263626362636263626362636263111010,18122105236513453364136345346307267416994127230736999953317923423262636263626362636263626362636263111010,1912210523651345336413634534630726641579412502646999949317923423262636263626362636263626362636263111010,10122105236513453364136345346307267417014126432686999948317923423262636263626362636263626362636263111010,1112210523651345336413634534630722741582412572576999942317923410,12122105236513453364136345346307228417094126932566999945317923410,1312210523651345336413634534630722741586412522786999938317923410,14122105236513453364136345346307228417104126532706999941317923410,1512210523651345336413634534630722741585412542846999933317923410,16122105236513453364136345346307228417104126830846999936317923410,1712210523651345336413634534630722741591412502756999930317923410,18122105236513453364136345346307228417174127030826999934317923410,1912210523651345336413634534630722741592412452716999926317923410,10122105236513453364136345346307228417124128032566999926317923410,1112210523651345336413634534630722741578412302346999925317923410,12122105236513453364136345346307228416754131532456999917317923410,1312210523651345336413634534630722741587412202766999919317923410,14122105236513453364136345346307228416704131830836999912317923410,1512210523651345336413634534630722741600412072536999915317923410,16122105236513453364136345346307228416584132532376999910317923410,1712210523651345336413634534630722741613412072726999909317923410,18122105236513453364136345346307228416374133632526999904317923410,1912210523651345336413634534630722741633412042416999896317923410,10122105236513453364136345346307228416194132932196999899317923410,1112210523651345336413634534630722741653412012136999891317923410,12122105236513453364136345346307228415994132232076999894317923410,1312210523651345336413634534630722741673412182426999889317923410,14122105236513453364136345346307228415804131231606999890317923410,15122105236513453364136345346307228416914123930206999884317923410,16122105236513453364136345346307228415664128431326999881317923410,17122105236513453364136345346307228416984125830606999880317923410,1812210523651345336413634534630722741563412572426999872317923410,19122105236513453364136345346307228416964129232256999874317923410,101221052365134533641363453463072234168541228306210317923411252101137]
  
  print('---------- Transmission Types ----------')
  print('1: Continous transmission')
  print('2: One-Time Transmssion')
  transmissionType = int(input('Please enter transmission type: '))
  transmission_vars = str(input('Enter targeted player slots:'))
  
  if transmissionType == 1:
    print(transmission_vars)
    continousTransmission()
  elif transmissionType == 2:
    otTransmission()

